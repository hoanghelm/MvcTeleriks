@model WIRS.Mvc.ViewModels.HomeViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, Kendo.Mvc
@using Kendo.Mvc.UI
@{
    ViewData["Title"] = "Home - WIRS Dashboard";
}

<div class="p-6 max-w-7xl mx-auto">
    <!-- Page Header -->
    <div class="mb-8">
        <h1 class="text-3xl font-bold text-gray-900 mb-2">WIRS Dashboard</h1>
        <p class="text-gray-600">Manage your incident reports and track system status</p>
    </div>

    <!-- Dashboard Cards -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
        <!-- All Incidents Card -->
        <div class="dashboard-card group bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 cursor-pointer border-2 border-transparent hover:border-blue-200 transform hover:-translate-y-1" 
             id="incidentCard" data-filter="all" onclick="selectCard(this, 'all')">
            <div class="p-6">
                <div class="flex items-center justify-between">
                    <div class="flex items-center space-x-4">
                        <div class="flex items-center justify-center w-14 h-14 bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl shadow-md group-hover:scale-110 transition-transform duration-300">
                            <i class="k-icon k-i-file-txt text-white text-2xl"></i>
                        </div>
                        <div>
                            <h3 class="text-xl font-bold text-gray-900 mb-1">All Incident Reports</h3>
                            <p class="text-gray-600">View and manage all incidents</p>
                        </div>
                    </div>
                    <div class="flex flex-col items-end">
                        <span class="incident-count inline-flex items-center px-3 py-2 rounded-full text-sm font-semibold bg-blue-100 text-blue-800">0</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Pending Reports Card -->
        <div class="dashboard-card group bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 cursor-pointer border-2 border-transparent hover:border-yellow-200 transform hover:-translate-y-1" 
             id="pendingCard" data-filter="pending" onclick="selectCard(this, 'pending')">
            <div class="p-6">
                <div class="flex items-center justify-between">
                    <div class="flex items-center space-x-4">
                        <div class="flex items-center justify-center w-14 h-14 bg-gradient-to-br from-yellow-500 to-orange-600 rounded-xl shadow-md group-hover:scale-110 transition-transform duration-300">
                            <i class="k-icon k-i-clock text-white text-2xl"></i>
                        </div>
                        <div>
                            <h3 class="text-xl font-bold text-gray-900 mb-1">Pending Reports</h3>
                            <p class="text-gray-600">Reports awaiting action</p>
                        </div>
                    </div>
                    <div class="flex flex-col items-end">
                        <span class="pending-count inline-flex items-center px-3 py-2 rounded-full text-sm font-semibold bg-yellow-100 text-yellow-800">0</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Incidents Grid Section -->
    <div class="bg-white rounded-xl shadow-lg p-6" id="incidentsList">
        <!-- Grid Header -->
        <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between mb-6 gap-4">
            <div>
                <h2 id="listTitle" class="text-2xl font-bold text-gray-900 mb-1">All Incident Reports</h2>
                <p class="text-gray-600">Manage and track your incident reports</p>
            </div>
            
            <!-- Search Section -->
            <div class="flex items-center space-x-2">
                <div class="relative">
                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                        <i class="k-icon k-i-search text-gray-400"></i>
                    </div>
                    <input type="text" 
                           id="incidentSearchInput" 
                           placeholder="Search by ID, description, or creator..." 
                           class="pl-10 pr-4 py-2 w-80 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors" />
                </div>
                <button type="button" 
                        id="clearSearchBtn" 
                        class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors">
                    <i class="k-icon k-i-x mr-1"></i>
                    Clear
                </button>
            </div>
        </div>

        <!-- Loading Skeleton -->
        <div class="space-y-4 mb-6" id="incidentSkeleton">
            <div class="animate-pulse">
                <div class="h-12 bg-gray-200 rounded-lg mb-3"></div>
                <div class="space-y-3">
                    <div class="h-4 bg-gray-200 rounded w-3/4"></div>
                    <div class="h-4 bg-gray-200 rounded w-1/2"></div>
                    <div class="h-4 bg-gray-200 rounded w-5/6"></div>
                    <div class="h-4 bg-gray-200 rounded w-2/3"></div>
                    <div class="h-4 bg-gray-200 rounded w-4/5"></div>
                </div>
            </div>
        </div>

        <!-- Grid Container -->
        <div class="overflow-hidden rounded-lg border border-gray-200">
            @(Html.Kendo().Grid<WIRS.Services.Models.IncidentModel>()
                    .Name("incidentGrid")
                    .Columns(columns =>
                    {
                        columns.Template("<a href='javascript:void(0)' onclick='viewIncident(\"#=incident_id#\")' class='incident-link'>#=incident_id#</a>")
                        .Title("Incident ID").Width(120);
                        columns.Bound(p => p.IncidentDateTime).Title("Date-Time").Format("{0:dd/MM/yyyy HH:mm}").Width(150);
                        columns.Bound(p => p.SbuName).Title("LOB").Width(120);
                        columns.Bound(p => p.DepartmentName).Title("Department").Width(150);
                        columns.Bound(p => p.IncidentDesc).Title("Incident Type").Width(200);
                        columns.Bound(p => p.CreatorName).Title("Submitted By").Width(150);
                        columns.Bound(p => p.SubmittedOn).Title("Submitted On").Format("{0:dd/MM/yyyy}").Width(120);
                        columns.Bound(p => p.StatusDesc).Title("Status").Width(100);
                        columns.Template("<a href='javascript:void(0)' onclick='printIncident(\"#=incident_id#\")' class='k-button k-button-solid-secondary k-rounded-md k-button-sm'><i class='k-icon k-i-print'></i></a>")
                        .Title("Actions").Width(80);
                    })
                    .Pageable(pageable => pageable
                    .Refresh(true)
                    .PageSizes(new int[] { 15, 25, 50 })
                    .ButtonCount(5))
                    .Sortable()
                    .Filterable()
                    .Scrollable()
                    )
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function selectCard(cardElement, filterType) {
            // Remove selected state from all cards
            $('.dashboard-card').removeClass('border-blue-500 border-yellow-500 shadow-xl ring-2 ring-blue-200 ring-yellow-200');
            $('.dashboard-card').addClass('border-transparent');
            
            // Add selected state to clicked card
            $(cardElement).removeClass('border-transparent');
            if (filterType === 'all') {
                $(cardElement).addClass('border-blue-500 shadow-xl ring-2 ring-blue-200');
            } else if (filterType === 'pending') {
                $(cardElement).addClass('border-yellow-500 shadow-xl ring-2 ring-yellow-200');
            }
            
            // Update the filter
            DashboardViewModel.api.setFilter(filterType);
        }

        function refreshIncidentData() {
            DashboardViewModel.api.refreshData();
        }
        
        $(document).ready(function() {
            DashboardViewModel.init();
            // Select the "All Reports" card by default
            selectCard($('#incidentCard')[0], 'all');
        });
    </script>
    <script src="~/js/dashboard-viewmodel.js" asp-append-version="true"></script>
    <script src="~/js/dashboard-actions.js" asp-append-version="true"></script>
}