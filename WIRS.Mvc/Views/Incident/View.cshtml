@model IncidentViewViewModel
@{
    ViewData["Title"] = "View Incident Report - " + (Model.Incident?.IncidentId ?? "");
}

@section Styles {
    <link rel="stylesheet" href="~/css/telerik-controls-standardized.css" />
    <link rel="stylesheet" href="~/css/incident/incident-view.css" />
    <link rel="stylesheet" href="~/css/components/employee-search.css" />
}

<div class="p-6 max-w-7xl mx-auto">
    <div class="mb-6">
        <div class="flex justify-between items-start">
            <div>
                <h1 class="text-xl font-bold text-gray-900 mb-2">
                    Incident Report - @(Model.Incident?.IncidentId ?? "Unknown")
                </h1>
                <div class="flex items-center gap-4 text-sm text-gray-600">
                    <span>Status: <span class="font-semibold text-blue-600">@Model.CurrentStageDescription</span></span>
                    <span>•</span>
                    <span>Created: @(Model.Incident?.CreationDate ?? "")</span>
                    @if (!string.IsNullOrEmpty(Model.Incident?.ModifyDate))
                    {
                        <span>•</span>
                        <span>Modified: @Model.Incident.ModifyDate</span>
                    }
                </div>
            </div>
            <div class="flex gap-2">
                @if (Model.CanEdit)
                {
                    @(Html.Kendo().Button()
                        .Name("btnEdit")
                        .Content("Edit")
                        .HtmlAttributes(new { @class = "btn-primary" })
                        .Events(e => e.Click("toggleEditMode"))
                    )
                }
                @(Html.Kendo().Button()
                    .Name("btnBack")
                    .Content("Back to List")
                    .HtmlAttributes(new { @class = "btn-secondary" })
                    .Events(e => e.Click("goBack"))
                )
            </div>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Model.ValidationMessage))
    {
        <div class="mb-4 p-3 bg-red-50 border border-red-200 text-red-700 text-sm rounded">
            @Model.ValidationMessage
        </div>
    }

    @if (!string.IsNullOrEmpty(Model.SuccessMessage))
    {
        <div class="mb-4 p-3 bg-green-50 border border-green-200 text-green-700 text-sm rounded">
            @Model.SuccessMessage
        </div>
    }

    <!-- Stage Navigation -->
    <div class="mb-6">
        <div class="flex border-b border-gray-200">
            @if (Model.CanViewPartA)
            {
                <button class="stage-tab @(Model.CurrentStage == "A" ? "active" : "")" data-stage="A" onclick="showStage('A')">
                    <div class="flex items-center gap-2">
                        <div class="stage-indicator @(Model.CurrentStage == "A" ? "current" : (Model.CanEditPartA ? "editable" : ""))">A</div>
                        <span>Initial Report</span>
                    </div>
                </button>
            }
            @if (Model.CanViewPartB)
            {
                <button class="stage-tab @(Model.CurrentStage == "B" ? "active" : "")" data-stage="B" onclick="showStage('B')">
                    <div class="flex items-center gap-2">
                        <div class="stage-indicator @(Model.CurrentStage == "B" ? "current" : (Model.CanEditPartB ? "editable" : ""))">B</div>
                        <span>Investigation</span>
                    </div>
                </button>
            }
            @if (Model.CanViewPartC)
            {
                <button class="stage-tab @(Model.CurrentStage == "C" ? "active" : "")" data-stage="C" onclick="showStage('C')">
                    <div class="flex items-center gap-2">
                        <div class="stage-indicator @(Model.CurrentStage == "C" ? "current" : (Model.CanEditPartC ? "editable" : ""))">C</div>
                        <span>Final Report</span>
                    </div>
                </button>
            }
        </div>
    </div>

    <form id="viewIncidentForm" class="space-y-6">
        @Html.Hidden("IncidentId", Model.Incident?.IncidentId)
        
        <!-- Part A - Initial Report -->
        <div id="partA" class="stage-content @(Model.CurrentStage == "A" ? "active" : "")">
            <!-- Incident Details Card -->
            <div class="card overflow-hidden">
                <div class="card-header">
                    <h2 class="card-title">Incident Details</h2>
                </div>
                <div class="card-body">
                    <div class="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6">
                        <!-- Incident Date -->
                        <div class="space-y-2">
                            <label class="block text-sm font-medium text-gray-700">Incident Date</label>
                            @(Html.Kendo().DatePicker()
                                .Name("IncidentDate")
                                .Value(string.IsNullOrEmpty(Model.Incident?.IncidentDate) ? (DateTime?)null : DateTime.Parse(Model.Incident.IncidentDate))
                                .Enable(Model.CanEditPartA)
                                .HtmlAttributes(new { id = "dpIncidentDate" })
                            )
                        </div>

                        <!-- Incident Time -->
                        <div class="space-y-2">
                            <label class="block text-sm font-medium text-gray-700">Incident Time</label>
                            @(Html.Kendo().TimePicker()
                                .Name("IncidentTime")
                                .Value(string.IsNullOrEmpty(Model.Incident?.IncidentTime) ? (DateTime?)null : DateTime.Parse(Model.Incident.IncidentTime))
                                .Enable(Model.CanEditPartA)
                                .HtmlAttributes(new { id = "tpIncidentTime" })
                            )
                        </div>

                        <!-- SBU -->
                        <div class="space-y-2">
                            <label class="block text-sm font-medium text-gray-700">SBU</label>
                            @(Html.Kendo().DropDownList()
                                .Name("SbuCode")
                                .Value(Model.Incident?.SbuCode)
                                .DataTextField("Value")
                                .DataValueField("Code")
                                .BindTo(Model.SbuOptions ?? new List<LookupItem>())
                                .Enable(Model.CanEditPartA)
                                .HtmlAttributes(new { id = "ddlSbuCode" })
                            )
                        </div>

                        <!-- Department -->
                        <div class="space-y-2">
                            <label class="block text-sm font-medium text-gray-700">Department</label>
                            @(Html.Kendo().TextBox()
                                .Name("DepartmentName")
                                .Value(Model.Incident?.DepartmentName)
                                .Enable(false)
                                .HtmlAttributes(new { id = "txtDepartmentName" })
                            )
                        </div>

                        <!-- Location -->
                        <div class="space-y-2">
                            <label class="block text-sm font-medium text-gray-700">Location</label>
                            @(Html.Kendo().TextBox()
                                .Name("LocationName")
                                .Value(Model.Incident?.LocationName)
                                .Enable(false)
                                .HtmlAttributes(new { id = "txtLocationName" })
                            )
                        </div>

                        <!-- Exact Location -->
                        <div class="space-y-2">
                            <label class="block text-sm font-medium text-gray-700">Exact Location</label>
                            @(Html.Kendo().TextBox()
                                .Name("ExactLocation")
                                .Value(Model.Incident?.ExactLocation)
                                .Enable(Model.CanEditPartA)
                                .HtmlAttributes(new { id = "txtExactLocation" })
                            )
                        </div>
                    </div>

                    <!-- Incident Description -->
                    <div class="mt-6 space-y-2">
                        <label class="block text-sm font-medium text-gray-700">Incident Description</label>
                        @(Html.Kendo().TextArea()
                            .Name("IncidentDesc")
                            .Value(Model.Incident?.IncidentDesc)
                            .Rows(4)
                            .Enable(Model.CanEditPartA)
                            .HtmlAttributes(new { id = "txtIncidentDesc" })
                        )
                    </div>
                </div>
            </div>

            <!-- Superior Information Card -->
            <div class="card overflow-hidden">
                <div class="card-header">
                    <h2 class="card-title">Superior Information</h2>
                </div>
                <div class="card-body">
                    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
                        <div class="space-y-2">
                            <label class="block text-sm font-medium text-gray-700">Superior Employee Number</label>
                            @(Html.Kendo().TextBox()
                                .Name("SuperiorEmpNo")
                                .Value(Model.Incident?.SuperiorEmpNo)
                                .Enable(Model.CanEditPartA)
                                .HtmlAttributes(new { id = "txtSuperiorEmpNo" })
                            )
                        </div>
                        <div class="space-y-2">
                            <label class="block text-sm font-medium text-gray-700">Superior Name</label>
                            @(Html.Kendo().TextBox()
                                .Name("SuperiorName")
                                .Value(Model.Incident?.SuperiorName)
                                .Enable(Model.CanEditPartA)
                                .HtmlAttributes(new { id = "txtSuperiorName" })
                            )
                        </div>
                        <div class="space-y-2">
                            <label class="block text-sm font-medium text-gray-700">Superior Designation</label>
                            @(Html.Kendo().TextBox()
                                .Name("SuperiorDesignation")
                                .Value(Model.Incident?.SuperiorDesignation)
                                .Enable(Model.CanEditPartA)
                                .HtmlAttributes(new { id = "txtSuperiorDesignation" })
                            )
                        </div>
                    </div>
                </div>
            </div>

            <!-- Additional Information Card -->
            <div class="card overflow-hidden">
                <div class="card-header">
                    <h2 class="card-title">Additional Information</h2>
                </div>
                <div class="card-body">
                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                        <div class="space-y-2">
                            <label class="block text-sm font-medium text-gray-700">Any Eyewitness?</label>
                            @(Html.Kendo().DropDownList()
                                .Name("AnyEyewitness")
                                .Value(Model.Incident?.AnyEyewitness?.ToString())
                                .BindTo(new List<object> {
                                    new { Text = "Yes", Value = "1" },
                                    new { Text = "No", Value = "0" }
                                })
                                .DataTextField("Text")
                                .DataValueField("Value")
                                .Enable(Model.CanEditPartA)
                                .HtmlAttributes(new { id = "ddlAnyEyewitness" })
                            )
                        </div>
                        <div class="space-y-2">
                            <label class="block text-sm font-medium text-gray-700">Was Working Overtime?</label>
                            @(Html.Kendo().DropDownList()
                                .Name("IsWorkingOvertime")
                                .Value(Model.Incident?.IsWorkingOvertime)
                                .BindTo(new List<object> {
                                    new { Text = "Yes", Value = "Y" },
                                    new { Text = "No", Value = "N" }
                                })
                                .DataTextField("Text")
                                .DataValueField("Value")
                                .Enable(Model.CanEditPartA)
                                .HtmlAttributes(new { id = "ddlIsWorkingOvertime" })
                            )
                        </div>
                        <div class="space-y-2">
                            <label class="block text-sm font-medium text-gray-700">Job Related?</label>
                            @(Html.Kendo().DropDownList()
                                .Name("IsJobrelated")
                                .Value(Model.Incident?.IsJobrelated)
                                .BindTo(new List<object> {
                                    new { Text = "Yes", Value = "Y" },
                                    new { Text = "No", Value = "N" }
                                })
                                .DataTextField("Text")
                                .DataValueField("Value")
                                .Enable(Model.CanEditPartA)
                                .HtmlAttributes(new { id = "ddlIsJobrelated" })
                            )
                        </div>
                        <div class="space-y-2">
                            <label class="block text-sm font-medium text-gray-700">Injured Case Type</label>
                            @(Html.Kendo().DropDownList()
                                .Name("InjuredCaseType")
                                .Value(Model.Incident?.InjuredCaseType)
                                .BindTo(Model.InjuredCaseTypeOptions ?? new List<LookupItem>())
                                .DataTextField("Value")
                                .DataValueField("Code")
                                .Enable(Model.CanEditPartA)
                                .HtmlAttributes(new { id = "ddlInjuredCaseType" })
                            )
                        </div>
                    </div>

                    <div class="mt-6 space-y-2">
                        <label class="block text-sm font-medium text-gray-700">Damage Description</label>
                        @(Html.Kendo().TextArea()
                            .Name("DamageDescription")
                            .Value(Model.Incident?.DamageDescription)
                            .Rows(3)
                            .Enable(Model.CanEditPartA)
                            .HtmlAttributes(new { id = "txtDamageDescription" })
                        )
                    </div>

                    <div class="mt-6 space-y-2">
                        <label class="block text-sm font-medium text-gray-700">Examined at Hospital/Clinic</label>
                        @(Html.Kendo().TextBox()
                            .Name("ExaminedHospitalClinicName")
                            .Value(Model.Incident?.ExaminedHospitalClinicName)
                            .Enable(Model.CanEditPartA)
                            .HtmlAttributes(new { id = "txtExaminedHospitalClinicName" })
                        )
                    </div>
                </div>
            </div>

            @if (Model.CanEditPartA)
            {
                <div class="flex justify-end space-x-4">
                    @(Html.Kendo().Button()
                        .Name("btnSavePartA")
                        .Content("Save Changes")
                        .HtmlAttributes(new { @class = "btn-primary" })
                        .Events(e => e.Click("savePartA"))
                    )
                </div>
            }
        </div>

        <!-- Part B - Investigation (placeholder for future implementation) -->
        <div id="partB" class="stage-content" style="display: none;">
            <div class="card">
                <div class="card-header">
                    <h2 class="card-title">Investigation Details</h2>
                </div>
                <div class="card-body">
                    <p class="text-gray-600">Investigation features will be implemented in the next phase.</p>
                </div>
            </div>
        </div>

        <!-- Part C - Final Report (placeholder for future implementation) -->
        <div id="partC" class="stage-content" style="display: none;">
            <div class="card">
                <div class="card-header">
                    <h2 class="card-title">Final Report</h2>
                </div>
                <div class="card-body">
                    <p class="text-gray-600">Final report features will be implemented in the next phase.</p>
                </div>
            </div>
        </div>
    </form>

    <!-- Workflow History Card -->
    <div class="card overflow-hidden mt-6">
        <div class="card-header">
            <h2 class="card-title">Workflow History</h2>
        </div>
        <div class="card-body">
            @if (Model.WorkflowHistory?.Any() == true)
            {
                <div class="space-y-4">
                    @foreach (var workflow in Model.WorkflowHistory.OrderByDescending(w => w.ActionDate))
                    {
                        <div class="flex items-start gap-4 p-4 bg-gray-50 rounded-lg">
                            <div class="flex-shrink-0">
                                <div class="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                                    <span class="text-xs font-semibold text-blue-600">@workflow.Status</span>
                                </div>
                            </div>
                            <div class="flex-grow">
                                <div class="flex justify-between items-start">
                                    <div>
                                        <p class="text-sm font-medium text-gray-900">@workflow.ActionType</p>
                                        <p class="text-xs text-gray-600">@workflow.UserName (@workflow.UserId)</p>
                                        @if (!string.IsNullOrEmpty(workflow.Comments))
                                        {
                                            <p class="text-sm text-gray-700 mt-1">@workflow.Comments</p>
                                        }
                                    </div>
                                    <span class="text-xs text-gray-500">@workflow.ActionDate</span>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <p class="text-gray-600 text-center py-4">No workflow history available</p>
            }
        </div>
    </div>

    <!-- Workflow Actions -->
    @if (Model.CanWorkflow && Model.WorkflowAction?.AvailableActions?.Any() == true)
    {
        <div class="card overflow-hidden mt-6">
            <div class="card-header">
                <h2 class="card-title">Workflow Actions</h2>
            </div>
            <div class="card-body">
                <form id="workflowActionForm">
                    @Html.Hidden("WorkflowAction.IncidentId", Model.WorkflowAction.IncidentId)
                    
                    <div class="space-y-4">
                        <div class="space-y-2">
                            <label class="block text-sm font-medium text-gray-700">Action</label>
                            @(Html.Kendo().DropDownList()
                                .Name("WorkflowAction.Action")
                                .OptionLabel("Select action")
                                .BindTo(Model.WorkflowAction.AvailableActions.Select(a => new SelectListItem { Text = a, Value = a }))
                                .HtmlAttributes(new { id = "ddlWorkflowAction" })
                                .Events(e => e.Change("onWorkflowActionChange"))
                            )
                        </div>
                        
                        <div class="space-y-2">
                            <label class="block text-sm font-medium text-gray-700">Comments</label>
                            @(Html.Kendo().TextArea()
                                .Name("WorkflowAction.Comments")
                                .Placeholder("Enter comments for this action")
                                .Rows(3)
                                .HtmlAttributes(new { id = "txtWorkflowComments" })
                            )
                        </div>

                        <div class="flex justify-end">
                            @(Html.Kendo().Button()
                                .Name("btnSubmitWorkflow")
                                .Content("Submit Action")
                                .HtmlAttributes(new { @class = "btn-success" })
                                .Events(e => e.Click("submitWorkflowAction"))
                            )
                        </div>
                    </div>
                </form>
            </div>
        </div>
    }
</div>

@Html.Partial("~/Views/Shared/Modal/_EmployeeSearchModal.cshtml")

@section Scripts {
    <script src="~/js/incident/incident-view-viewmodel.js"></script>
    <script src="~/js/components/employee-search.js"></script>
    <script src="~/js/telerik-notifications.js"></script>
}